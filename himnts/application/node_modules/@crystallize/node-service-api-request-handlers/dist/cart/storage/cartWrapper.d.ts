import { StateMachineDefinition } from '../../core/statemachine';
import { BackendStorage } from '../../core/type';
import { Cart } from '../types';
export declare enum State {
    Cart = "cart",
    Placed = "placed",
    Paid = "paid"
}
export declare enum Transition {
    Save = "save",
    Place = "place",
    Fullfill = "fullfill"
}
export type CartWrapper = {
    customer?: any;
    cart: Cart;
    cartId: string;
    state: State;
    extra: any;
};
export type CartWrapperRepository = {
    find: (id: string) => Promise<CartWrapper | undefined | null>;
    create: (cart: Cart, id: string, extra?: any) => CartWrapper;
    save: (cartWrapper: CartWrapper) => boolean;
    place: (cartWrapper: CartWrapper) => boolean;
    attachOrderId: (cartWrapper: CartWrapper, orderId: string) => void;
};
export declare function createRepository(storage: BackendStorage, stateMachineDefinition?: StateMachineDefinition): CartWrapperRepository;
