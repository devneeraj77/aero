"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleOrdersRequestPayload = exports.handleOrderRequestPayload = void 0;
const js_api_client_1 = require("@crystallize/js-api-client");
async function handleOrderRequestPayload(payload, args) {
    const fetcher = args.fetcherById ?? js_api_client_1.CrystallizeOrderFetcherById;
    const order = await fetcher(args.orderId, args?.onCustomer, args?.onOrderItem, args?.extraQuery);
    if (!order) {
        throw {
            status: 404,
            message: `Order ${args.orderId} does not exist.`,
        };
    }
    if (args.checkIfOrderBelongsToUser && args.checkIfOrderBelongsToUser() === false) {
        return order;
    }
    if (order.customer?.identifier !== args.user) {
        throw {
            status: 403,
            message: 'Unauthorized. That is not your order.',
        };
    }
    return order;
}
exports.handleOrderRequestPayload = handleOrderRequestPayload;
async function handleOrdersRequestPayload(payload, args) {
    // @todo: handle pagination
    const fetcher = args.fetcherByCustomerIdentifier ?? js_api_client_1.CrystallizeOrderFetcherByCustomerIdentifier;
    const pagination = await fetcher(args.user, args?.extraQueryArgs, args?.onCustomer, args?.onOrderItem, args?.extraQuery);
    return pagination.orders;
}
exports.handleOrdersRequestPayload = handleOrdersRequestPayload;
//# sourceMappingURL=handlers.js.map