"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleKlarnaPaymentWebhookRequestPayload = exports.handleKlarnaInitiatePaymentRequestPayload = void 0;
const client_1 = require("./client");
async function handleKlarnaInitiatePaymentRequestPayload(payload, args) {
    const cart = await args.fetchCart();
    const apiURL = `https://${args.origin}`;
    const client = (0, client_1.createClient)(args.credentials.username, args.credentials.password);
    const paymentArguments = args.initiatePaymentArguments(cart);
    const body = {
        merchant_reference1: payload.cartId,
        order_amount: paymentArguments.amount,
        order_lines: paymentArguments.order_lines,
        purchase_country: args.country,
        locale: args.locale,
        purchase_currency: paymentArguments.currency,
        intent: 'buy',
        merchant_urls: {
            confirmation: paymentArguments.urls.confirmation,
            authorization: paymentArguments.urls.authorization,
        },
        ...(paymentArguments.extra ? paymentArguments.extra : {}),
        ...(args.otherPaymentArguments ? args.otherPaymentArguments : {}),
    };
    return await client.post(`${apiURL}/payments/v1/sessions`, body);
}
exports.handleKlarnaInitiatePaymentRequestPayload = handleKlarnaInitiatePaymentRequestPayload;
async function handleKlarnaPaymentWebhookRequestPayload(payload, args) {
    const cart = await args.fetchCart();
    const apiURL = `https://${args.origin}`;
    const client = (0, client_1.createClient)(args.credentials.username, args.credentials.password);
    const paymentArguments = args.confirmPaymentArguments(cart);
    const body = {
        merchant_reference1: args.cartId,
        order_amount: paymentArguments.amount,
        order_lines: paymentArguments.order_lines,
        purchase_country: args.country,
        locale: args.locale,
        purchase_currency: paymentArguments.currency,
        ...(paymentArguments.extra ? paymentArguments.extra : {}),
    };
    const response = await client.post(`${apiURL}/payments/v1/authorizations/${payload.authorization_token}/order`, body);
    return await args.handleEvent(response);
}
exports.handleKlarnaPaymentWebhookRequestPayload = handleKlarnaPaymentWebhookRequestPayload;
//# sourceMappingURL=handlers.js.map