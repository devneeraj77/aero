"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createClient = void 0;
const node_fetch_1 = __importDefault(require("node-fetch"));
const fetchResult = async (url, init) => {
    const response = await (0, node_fetch_1.default)(url, {
        ...init,
        headers: {
            'Content-type': 'application/json; charset=UTF-8',
            Accept: 'application/json',
            'Accept-Version': 'v10',
            ...(init.headers ? init.headers : {}),
        },
    });
    if (!response.ok) {
        console.error('QuickPay', await response.text());
        throw new Error(`Could not fetch ${url}. Response from QuickPay is NOT OK.`);
    }
    return await response.json();
};
const createClient = (key) => {
    const authKey = Buffer.from(`:${key}`).toString('base64');
    const authHeader = {
        headers: {
            Authorization: `Basic ${authKey}`,
        },
    };
    return {
        get: async (input, init) => {
            return fetchResult(input, {
                ...authHeader,
                ...init,
            });
        },
        post: async (input, body, init) => {
            return fetchResult(input, {
                method: 'POST',
                ...authHeader,
                body: JSON.stringify(body),
                ...init,
            });
        },
        put: async (input, body, init) => {
            return fetchResult(input, {
                method: 'PUT',
                ...authHeader,
                body: JSON.stringify(body),
                ...init,
            });
        },
    };
};
exports.createClient = createClient;
//# sourceMappingURL=client.js.map